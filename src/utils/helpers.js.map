{"debug_id":"e541d9e2-459c-5ae7-925a-3eed13bb44da","file":"helpers.js","mappings":";AAAA,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEpG,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAE9D,MAAM,UAAU,cAAc,CAAC,YAA4B;IACvD,IAAI,CAAC,YAAY;QAAE,OAAO,SAAS,CAAC;IACpC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;IACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAClD,MAAM,gBAAgB,GAAG,OAAO,GAAG,EAAE,CAAC;IAEtC,IAAI,KAAK,GAAG,CAAC,EAAE;QACX,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,gBAAgB;aACjG,QAAQ,EAAE;aACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;KAC3B;SAAM,IAAI,OAAO,GAAG,CAAC,EAAE;QACpB,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,gBAAgB,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;KACnG;SAAM;QACH,OAAO,GAAG,gBAAgB,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;KAC5D;AACL,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAAqB;IAC7C,IAAI,CAAC,KAAK;QAAE,OAAO,SAAS,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9C,IAAI,KAAK,IAAI,CAAC;QAAE,OAAO,QAAQ,CAAC;IAChC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,IAAU;IASjC,OAAO;QACH,EAAE,EAAE,IAAI,CAAC,EAAE;QACX,GAAG,EAAE,IAAI,CAAC,GAAG;QACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,aAAa,EAAE,IAAI,CAAC,aAAa;QACjC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,SAAS;QACxC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,SAAS;QACxC,SAAS,EAAE,IAAI,CAAC,cAAc,IAAI,SAAS;KAC9C,CAAC;AACN,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,IAAqE;IAChG,IAAI,IAAI,YAAY,YAAY,IAAI,IAAI,YAAY,eAAe,EAAE;QACjE,OAAO,WAAW,CAAC,OAAO,CAAC;KAC9B;SAAM,IAAI,IAAI,YAAY,YAAY,IAAI,IAAI,YAAY,eAAe,EAAE;QACxE,OAAO,WAAW,CAAC,OAAO,CAAC;KAC9B;SAAM;QACH,OAAO,EAAE,CAAC;KACb;AACL,CAAC","names":[],"sourceRoot":"/","sources":["src/utils/helpers.ts"],"sourcesContent":["import { YouTubeTrack, SpotifyTrack, YouTubePlaylist, SpotifyPlaylist } from '@structures/index.js';\nimport { User } from 'discord.js';\nimport { MusicEmojis } from '@structures/interfaces/Enums.js';\n\nexport function formatDuration(milliseconds?: number | null) {\n    if (!milliseconds) return 'No Data';\n    const seconds = Math.floor(milliseconds / 1000);\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainingSeconds = seconds % 60;\n\n    if (hours > 0) {\n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${remainingSeconds\n            .toString()\n            .padStart(2, '0')}`;\n    } else if (minutes > 0) {\n        return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n    } else {\n        return `${remainingSeconds.toString().padStart(2, '0')}`;\n    }\n}\n\nexport function formatBytes(bytes?: number | null) {\n    if (!bytes) return 'No Data';\n    let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) return '0 Byte';\n    let i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i];\n}\n\nexport function formatUser(user: User): {\n    id: string;\n    tag: string;\n    username: string;\n    discriminator: string;\n    avatarURL?: string;\n    bannerURL?: string;\n    accentHex?: string;\n} {\n    return {\n        id: user.id,\n        tag: user.tag,\n        username: user.username,\n        discriminator: user.discriminator,\n        avatarURL: user.avatarURL() ?? undefined,\n        bannerURL: user.bannerURL() ?? undefined,\n        accentHex: user.hexAccentColor ?? undefined,\n    };\n}\n\nexport function getServiceIcon(item: YouTubeTrack | SpotifyTrack | YouTubePlaylist | SpotifyPlaylist) {\n    if (item instanceof YouTubeTrack || item instanceof YouTubePlaylist) {\n        return MusicEmojis.YouTube;\n    } else if (item instanceof SpotifyTrack || item instanceof SpotifyPlaylist) {\n        return MusicEmojis.Spotify;\n    } else {\n        return '';\n    }\n}\n"],"version":3}