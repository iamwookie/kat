{"debug_id":"cb58cb78-13b2-5e54-b3bd-be0e17a6f538","file":"volume.js","mappings":"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","names":[],"sourceRoot":"/","sources":["src/commands/music/volume.ts"],"sourcesContent":["import { Command, KATClient as Client, Commander, PermissionPrompts } from '@structures/index.js';\nimport { SlashCommandBuilder, ChatInputCommandInteraction, Message, PermissionFlagsBits } from 'discord.js';\nimport { ActionEmbed } from '@utils/embeds/index.js';\n\nexport class VolumeCommand extends Command {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, {\n            name: 'volume',\n            module: 'Music',\n            legacy: true,\n            aliases: ['v'],\n            description: {\n                content: 'View or set the server music volume. [Admin Only]',\n                format: '<?number>(0-100)',\n            },\n            cooldown: 5,\n            ephemeral: true,\n        });\n    }\n\n    data() {\n        return new SlashCommandBuilder()\n            .setName(this.name)\n            .setDescription(this.description?.content!)\n            .setDMPermission(false)\n            .addStringOption((option) => option.setName('number').setDescription('The volume to set. (0-100)'));\n    }\n\n    async execute(int: ChatInputCommandInteraction<'cached'> | Message<true>) {\n        const author = this.commander.getAuthor(int);\n        const args = this.commander.getArgs(int)[0] as string;\n\n        if (!args) {\n            const res = await this.client.cache.music.get(int.guildId!);\n            return this.commander.reply(int, { embeds: [new ActionEmbed('success').setText(`The current volume is \\`${res?.volume ?? 100}%\\`!`)] });\n        }\n\n        if (!this.client.isDev(author) && !int.member?.permissions.has(PermissionFlagsBits.Administrator))\n            return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(PermissionPrompts.NotAllowed)] });\n\n        const volume = parseInt(args);\n        if (isNaN(volume)) return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText('Invalid volume provided!')] });\n        if (volume < 0 || volume > 100)\n            return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText('Volume must be between `0` and `100`!')] });\n\n        const res = await this.client.prisma.guild.upsert({\n            where: {\n                guildId: int.guildId!,\n            },\n            update: {\n                music: {\n                    upsert: {\n                        update: {\n                            volume: volume,\n                        },\n                        create: {\n                            volume: volume,\n                        },\n                    },\n                },\n            },\n            create: {\n                guildId: int.guildId!,\n                music: {\n                    create: {\n                        volume: volume,\n                    },\n                },\n            },\n            select: {\n                music: true,\n            },\n        });\n        if (!res?.music) return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText('An error occured while setting the volume!')] });\n\n        this.client.cache.music.set(int.guildId!, res.music);\n\n        const subscription = this.client.dispatcher.getSubscription(int.guild);\n        if (subscription) {\n            subscription.volume = res.music.volume;\n            subscription.player.setVolume(res.music.volume / 100);\n        }\n\n        this.commander.reply(int, {\n            embeds: [\n                new ActionEmbed('success').setText(\n                    `Set the music volume to \\`${res.music.volume}%\\`!${\n                        subscription ? '\\n```⚠️ It may take a few seconds to update the volume for the currently playing track.```' : ''\n                    }`\n                ),\n            ],\n        });\n    }\n}\n"],"version":3}