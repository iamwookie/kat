{"debug_id":"9c0e0ae9-ffc4-58d8-a51f-b21124454875","file":"lyrics.js","mappings":"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","names":[],"sourceRoot":"/","sources":["src/commands/music/lyrics.ts"],"sourcesContent":["import { Command, KATClient as Client, Commander, MusicPrompts } from '@structures/index.js';\nimport { SlashCommandBuilder, ChatInputCommandInteraction, EmbedBuilder } from 'discord.js';\nimport { ActionEmbed } from '@utils/embeds/index.js';\n\nimport GeniusLyrics from 'genius-lyrics';\nconst genius = new GeniusLyrics.Client();\n\nexport class LyricsCommand extends Command {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, {\n            name: 'lyrics',\n            module: 'Music',\n            description: {\n                content: 'View the current tracks lyrics or search for one.',\n                format: '<?title/url>',\n            },\n        });\n    }\n\n    data() {\n        return new SlashCommandBuilder()\n            .setName(this.name)\n            .setDescription(this.description?.content!)\n            .setDMPermission(false)\n            .addStringOption((option) => option.setName('query').setDescription('The name or URL of the track to search for.'));\n    }\n\n    async execute(int: ChatInputCommandInteraction<'cached'>) {\n        let query = int.options.getString('query');\n\n        const subscription = this.client.dispatcher.getSubscription(int.guild);\n        if (!query && subscription && subscription.active) query = subscription.active.title;\n        if (!query) return int.editReply({ embeds: [new ActionEmbed('fail').setText(MusicPrompts.NotPlaying)] });\n\n        this.applyCooldown(int.user);\n\n        const noResults = new ActionEmbed('fail').setText(MusicPrompts.NoResults);\n\n        try {\n            const search = await genius.songs.search(query);\n\n            let lyrics = search[0] ? await search[0].lyrics() : null;\n            if (!lyrics) return int.editReply({ embeds: [noResults] });\n            if (lyrics.length > 4000) lyrics = lyrics.substring(0, 4000) + '\\n...';\n\n            const success = new EmbedBuilder();\n            success.setDescription(\n                `**Track: ${search[0].title} - ${search[0].artist.name}**\\n\\n\\`\\`\\`${lyrics}\\`\\`\\`\\n**Lyrics provided by [Genius](https://genius.com)**`\n            );\n\n            int.editReply({ embeds: [success] });\n        } catch (err) {\n            this.client.logger.error(err);\n            int.editReply({ embeds: [noResults] });\n        }\n    }\n}\n"],"version":3}