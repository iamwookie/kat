{"debug_id":"be1b638b-3b85-5ca3-8954-c8cf5a8804f6","file":"loop.js","mappings":";AAAA,OAAO,EAAE,OAAO,EAAkC,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAE7F,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,MAAM,OAAO,WAAY,SAAQ,OAAO;IACpC,YAAY,MAAc,EAAE,SAAoB;QAC5C,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE;YACrB,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,OAAO;YACf,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,CAAC,QAAQ,CAAC;YACnB,WAAW,EAAE;gBACT,OAAO,EAAE,mCAAmC;aAC/C;YACD,SAAS,EAAE,IAAI;SAClB,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,GAA0D;QACpE,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAE7C,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvE,IAAI,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;QACpJ,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YACjD,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAE/G,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;IAChJ,CAAC;CACJ","names":[],"sourceRoot":"/","sources":["src/commands/music/loop.ts"],"sourcesContent":["import { Command, KATClient as Client, Commander, MusicPrompts } from '@structures/index.js';\nimport { ChatInputCommandInteraction, Message } from 'discord.js';\nimport { ActionEmbed } from '@utils/embeds/index.js';\n\nexport class LoopCommand extends Command {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, {\n            name: 'loop',\n            module: 'Music',\n            legacy: true,\n            aliases: ['repeat'],\n            description: {\n                content: 'Loop the currently playing track.',\n            },\n            ephemeral: true,\n        });\n    }\n\n    async execute(int: ChatInputCommandInteraction<'cached'> | Message<true>) {\n        const author = this.commander.getAuthor(int);\n\n        const subscription = this.client.dispatcher.getSubscription(int.guild);\n        if (!subscription || !subscription.active) return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.NotPlaying)] });\n        if (!subscription.voiceChannel.members.has(author.id))\n            return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.NotInMyVoice)] });\n\n        const looped = subscription.loop();\n        this.commander.reply(int, { embeds: [new ActionEmbed('success').setText(looped ? MusicPrompts.TrackLooped : MusicPrompts.TrackUnlooped)] });\n    }\n}\n"],"version":3}