{"debug_id":"f6bfe987-dda0-54b7-94de-5dba323bb456","file":"play.js","mappings":"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","names":[],"sourceRoot":"/","sources":["src/commands/music/play.ts"],"sourcesContent":["import { Command, KATClient as Client, Commander, MusicPrompts, NodeError, PlayerError, SearchError } from '@structures/index.js';\nimport { SlashCommandBuilder, ChatInputCommandInteraction, Message, GuildMember, VoiceChannel } from 'discord.js';\nimport { ActionEmbed, ErrorEmbed, MusicEmbed } from '@utils/embeds/index.js';\n\nexport class PlayCommand extends Command {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, {\n            name: 'play',\n            module: 'Music',\n            legacy: true,\n            aliases: ['p'],\n            description: {\n                content: 'Add a track to the queue, or resume the current one.',\n                format: '<?title/url>',\n            },\n            cooldown: 5,\n            ephemeral: true,\n        });\n    }\n\n    data() {\n        return new SlashCommandBuilder()\n            .setName(this.name)\n            .setDescription(this.description?.content!)\n            .setDMPermission(false)\n            .addStringOption((option) => option.setName('query').setDescription('The name or URL of the track to search for.'));\n    }\n\n    async execute(int: ChatInputCommandInteraction<'cached'> | Message<true>) {\n        const author = this.commander.getAuthor(int);\n        const query = this.commander.getArgs(int).join(' ');\n\n        const voiceChannel = (int.member as GuildMember).voice.channel;\n        if (!voiceChannel) return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.NotInVoice)] });\n        if (!(voiceChannel instanceof VoiceChannel))\n            return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.IncorrectVoice)] });\n        if (!voiceChannel.joinable || !voiceChannel.speakable)\n            return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.CannotPlayInVoice)] });\n\n        if (!query) {\n            const subscription = this.client.dispatcher.getSubscription(int.guild);\n            if (!subscription?.paused) return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText('What should I play?')] });\n\n            subscription.resume();\n            return this.commander.react(int, '▶️');\n        }\n\n        this.applyCooldown(author);\n\n        try {\n            const res = await this.client.dispatcher.search(query, author);\n            if (!res) return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.NoResults)] });\n\n            const subscription = await this.client.dispatcher.createSubscription(int.guild, voiceChannel, int.channel!);\n            subscription.add(res);\n\n            // Could use an empty flag for this in the future\n            if (subscription.queue.length) return this.commander.reply(int, { embeds: [new MusicEmbed(subscription).setUser(author).setEnqueued(res)] });\n\n            this.commander.react(int, '✅');\n        } catch (err) {\n            if (err instanceof NodeError) {\n                return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.NoNodes)] });\n            } else if (err instanceof SearchError && err.code == 1) {\n                return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(`Failed to load track! \\n\\`${err.message}\\``)] });\n            } else if (err instanceof PlayerError) {\n                return this.commander.reply(int, { embeds: [new ActionEmbed('fail').setText(MusicPrompts.VoiceError)] });\n            } else {\n                const eventId = this.client.logger.error(err);\n                return this.commander.reply(int, { embeds: [new ErrorEmbed(eventId)] });\n            }\n        }\n    }\n}\n"],"version":3}