{"debug_id":"33143f8f-fac8-5a4c-ae27-d9736ea25e77","file":"help.js","mappings":"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","names":[],"sourceRoot":"/","sources":["src/commands/misc/help.ts"],"sourcesContent":["import { KATClient as Client, Commander, Command } from '@structures/index.js';\nimport {\n    ChatInputCommandInteraction,\n    EmbedBuilder,\n    Message,\n    ActionRowBuilder,\n    StringSelectMenuBuilder,\n    StringSelectMenuOptionBuilder,\n    Interaction,\n    ComponentType,\n} from 'discord.js';\n\nexport class HelpCommand extends Command {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, {\n            name: 'help',\n            module: 'Misc',\n            aliases: ['info'],\n            legacy: true,\n            description: {\n                content: 'Stop it, get some help.',\n            },\n            ephemeral: true,\n            allowDM: true,\n        });\n    }\n\n    async execute(int: ChatInputCommandInteraction | Message) {\n        const author = this.commander.getAuthor(int);\n        const embed = new EmbedBuilder().setTitle('**Help Menu**').setDescription(`Select an option from the dropdown menu below.`);\n        const menu = new StringSelectMenuBuilder().setCustomId('help_menu').setPlaceholder('Select a category');\n\n        for (const module of this.client.commander.modules.values()) {\n            if (!int.inGuild() && module.guilds) continue;\n            if (module.guilds && !module.guilds.includes(int.guild?.id!)) continue;\n\n            const commands = Array.from(module.commands.values()).filter(\n                (c) => !c.disabled && !c.hidden && (c.users ? c.users.includes(author.id) : true)\n            );\n            if (commands.length) menu.addOptions(new StringSelectMenuOptionBuilder().setLabel(module.name + ' Commands').setValue(module.name));\n        }\n\n        const reply = await this.commander.reply(int, {\n            embeds: [embed],\n            components: [new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(menu)],\n        });\n        const filter = (i: Interaction) => i.isStringSelectMenu() && i.customId == 'help_menu' && i.message.id == reply.id && i.user.id == author.id;\n        const collector = int.channel!.createMessageComponentCollector<ComponentType.StringSelect>({ filter, time: 60_000, max: 1 });\n\n        collector.on('collect', async (i) => {\n            const moduleName = i.values[0];\n            const module = this.client.commander.modules.get(moduleName)!;\n\n            let prefix = this.client.prefix;\n            if (i.inCachedGuild()) prefix = await this.client.cache.guilds.prefix(i.guild.id);\n\n            embed.setFooter({ text: \"Parameters with a '?' at the start are optional.\" });\n            embed.setDescription(`Commands may also be run as slash commands.`)\n            embed.addFields({\n                name: module.name + ' Commands',\n                value: Array.from(module.commands.values())\n                    .filter((c) => !c.disabled && !c.hidden && (c.users ? c.users.includes(author.id) : true))\n                    .map((c) => `\\`${c.usage(prefix)}\\` â†’ ${c.description?.content}`)\n                    .join('\\n'),\n            });\n\n            this.commander.edit(int, reply, { embeds: [embed], components: [] });\n        });\n\n        collector.on('end', (collected, reason) => {\n            if (!collected.size && reason == 'time') {\n                this.commander.edit(int, reply, {\n                    embeds: [embed],\n                    components: [new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(menu.setDisabled(true))],\n                });\n            }\n        });\n    }\n}\n"],"version":3}