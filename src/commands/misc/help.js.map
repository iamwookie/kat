{"debug_id":"bd9c87de-548b-5d44-b769-93c45d00225e","file":"help.js","mappings":"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","names":[],"sourceRoot":"/","sources":["src/commands/misc/help.ts"],"sourcesContent":["import { KATClient as Client, Commander, Command } from '@structures/index.js';\nimport {\n    ChatInputCommandInteraction,\n    EmbedBuilder,\n    ActionRowBuilder,\n    StringSelectMenuBuilder,\n    StringSelectMenuOptionBuilder,\n    Interaction,\n    ComponentType,\n} from 'discord.js';\n\nexport class HelpCommand extends Command {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, {\n            name: 'help',\n            module: 'Misc',\n            // Remove when shifting to slash commands.\n            aliases: ['info'],\n            description: {\n                content: 'Stop it, get some help.',\n            },\n            ephemeral: true,\n            allowDM: true,\n        });\n    }\n\n    async execute(int: ChatInputCommandInteraction<'cached'>) {\n        const embed = new EmbedBuilder().setTitle('**Help Menu**').setDescription(`Select an option from the dropdown menu below.`);\n        const menu = new StringSelectMenuBuilder().setCustomId('help_menu').setPlaceholder('Select a category');\n\n        for (const module of this.client.commander.modules.values()) {\n            if (!int.inGuild() && module.guilds) continue;\n            if (module.guilds && !module.guilds.includes(int.guild?.id!)) continue;\n\n            const commands = Array.from(module.commands.values()).filter((c) => !c.disabled && !c.hidden && (c.users ? c.users.includes(int.user.id) : true));\n            if (commands.length) menu.addOptions(new StringSelectMenuOptionBuilder().setLabel(module.name + ' Commands').setValue(module.name));\n        }\n\n        const reply = await int.editReply({ embeds: [embed], components: [new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(menu)] });\n        const filter = (i: Interaction) => i.isStringSelectMenu() && i.customId == 'help_menu' && i.message.id == reply.id && i.user.id == int.user.id;\n        const collector = int.channel!.createMessageComponentCollector<ComponentType.StringSelect>({ filter, time: 60_000, max: 1 });\n\n        collector.on('collect', async (i) => {\n            const moduleName = i.values[0];\n            const module = this.client.commander.modules.get(moduleName);\n            if (!module) return;\n\n            embed.setFooter({ text: \"Parameters with a '?' at the start are optional.\" });\n            embed.addFields({\n                name: module.name + ' Commands',\n                value: Array.from(module.commands.values())\n                    .filter((c) => !c.disabled && !c.hidden && (c.users ? c.users.includes(int.user.id) : true))\n                    .map((c) => `\\`${c.usage('/')}\\` â†’ ${c.description?.content}`)\n                    .join('\\n'),\n            });\n\n            int.editReply({ embeds: [embed], components: [] });\n        });\n\n        collector.on('end', (collected, reason) => {\n            if (!collected.size && reason == 'time')\n                int.editReply({ embeds: [embed], components: [new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(menu.setDisabled(true))] });\n        });\n    }\n}\n"],"version":3}