{"debug_id":"1ddcac1a-5ecf-52fe-93aa-a72711e37011","file":"Subscription.js","mappings":"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","names":[],"sourceRoot":"/","sources":["src/structures/music/Subscription.ts"],"sourcesContent":["import { YouTubeTrack, SpotifyTrack } from './Track.js';\nimport { YouTubePlaylist, SpotifyPlaylist } from './Playlist.js';\nimport { Guild, VoiceBasedChannel, TextBasedChannel, Message } from 'discord.js';\nimport { Player, Node, TrackExceptionEvent, TrackStartEvent, TrackEndEvent } from 'shoukaku';\nimport { Dispatcher } from './Dispatcher.js';\nimport { Events } from '../interfaces/Events.js';\n\nexport class Subscription {\n    public queue: (YouTubeTrack | SpotifyTrack)[];\n    public active: YouTubeTrack | SpotifyTrack | null;\n    public position: number;\n    public volume: number;\n    public looped: boolean;\n    public destroyed: boolean;\n    public message?: Message;\n\n    // Use options interface here in the future\n    constructor(\n        private dispatcher: Dispatcher,\n        public guild: Guild,\n        public voiceChannel: VoiceBasedChannel,\n        public textChannel: TextBasedChannel,\n        public player: Player,\n        public node: Node\n    ) {\n        this.dispatcher = dispatcher;\n\n        this.queue = [];\n        this.active = null;\n        this.position = 0;\n        this.looped = false;\n        this.volume = 100;\n        this.destroyed = false;\n\n        this.player.on('exception', (data: TrackExceptionEvent) => this.dispatcher.client.emit(Events.PlayerException, this, data));\n        this.player.on('start', (data: TrackStartEvent) => this.dispatcher.client.emit(Events.PlayerStart, this, data));\n        this.player.on('end', (data: TrackEndEvent) => this.dispatcher.client.emit(Events.PlayerEnd, this, data));\n\n        // -----> REQUIRES FIXING FROM SHOUKAKU\n        //\n        // this.player.on(\"closed\", (reason) => {\n        //     this.client.logger.warn(`Music >> Closed Connection in ${this.guild.name} (${this.guild.id}). Node: ${this.node.name}`);\n        //     this.destroy();\n        // });\n    }\n\n    public process() {\n        const track = this.looped ? this.active : this.queue.shift();\n        if (!track) return;\n\n        this.active = track;\n        this.player.setVolume(this.volume / 100);\n        this.player.playTrack({ track: track.data.track });\n\n        if (!this.looped) {\n            this.position += 1;\n            this.dispatcher.client.emit(Events.TrackRemove, this, track);\n        }\n    }\n\n    public destroy(): void {\n        if (this.destroyed) return;\n\n        this.queue = [];\n        this.active = null;\n        this.player.connection.disconnect();\n        this.dispatcher.subscriptions.delete(this.guild.id);\n        this.destroyed = true;\n\n        this.dispatcher.client.emit('subscriptionDestroy', this);\n    }\n\n    public add(item: YouTubeTrack | SpotifyTrack | YouTubePlaylist | SpotifyPlaylist): void {\n        if (item instanceof YouTubePlaylist) {\n            this.queue.push(...item.tracks);\n        } else if (item instanceof SpotifyPlaylist) {\n            this.queue.push(...item.tracks);\n        } else {\n            this.queue.push(item);\n        }\n\n        this.dispatcher.client.emit(Events.TrackAdd, this, item);\n\n        if (!this.active) this.process();\n    }\n\n    public stop(): Subscription {\n        this.looped = false;\n        this.active = null;\n        this.player.stopTrack();\n        return this;\n    }\n\n    public pause(): boolean {\n        if (!this.active) return true;\n        this.player.setPaused(true);\n        this.dispatcher.client.emit(Events.PlayerPause, this, this.active);\n        return this.paused;\n    }\n\n    public resume(): boolean {\n        if (!this.active) return false;\n        this.player.setPaused(false);\n        this.dispatcher.client.emit(Events.PlayerResume, this, this.active);\n        return this.paused;\n    }\n\n    public loop(): boolean {\n        this.looped = !this.looped;\n        this.dispatcher.client.emit(Events.PlayerLoop, this, this.active);\n        return this.looped;\n    }\n\n    // Getters\n\n    public get duration() {\n        return this.player.position;\n    }\n\n    public get paused() {\n        return this.player.paused;\n    }\n}\n"],"version":3}