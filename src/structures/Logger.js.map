{"debug_id":"29fe3308-d7c3-5b69-bf58-01699c004491","file":"Logger.js","mappings":"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","names":[],"sourceRoot":"/","sources":["src/structures/Logger.ts"],"sourcesContent":["import { KATClient as Client } from './Client.js';\nimport Sentry from '@sentry/node';\nimport { APIEmbed, JSONEncodable } from 'discord.js';\nimport { ErrorEmbed } from '@utils/embeds/index.js';\n\nimport chalk from 'chalk';\n\nexport class Logger {\n    constructor(private client: Client) {\n        this.status('>>>> Logger Initialized!');\n    }\n\n    fatal(err: any, message?: string, scope?: string): void {\n        const eventId = Sentry.captureException(err);\n\n        console.error(chalk.red(`${scope ? `${scope} ` : ''}(FATAL) (${eventId}): ${message ?? 'An Error Has Occurred!'}`));\n        console.error(err);\n\n        if (this.client.isReady()) this.notify(new ErrorEmbed(eventId));\n\n        process.exit();\n    }\n\n    uncaught(err: any): string {\n        const eventId = Sentry.captureException(err);\n\n        console.error(chalk.redBright(`(UNCAUGHT) (${eventId}): An Uncaught Error Has Occured!`));\n        console.error(err);\n\n        if (this.client.isReady()) this.notify(new ErrorEmbed(eventId));\n\n        return eventId;\n    }\n\n    error(err: any, message?: string, scope?: string): string {\n        const eventId = Sentry.captureException(err);\n\n        console.error(chalk.red(`${scope ? `${scope} ` : ''}(ERROR) (${eventId}): ${message ?? 'An Error Has Occurred!'}`));\n        console.error(err);\n\n        if (this.client.isReady()) this.notify(new ErrorEmbed(eventId));\n\n        return eventId;\n    }\n\n    warn(message: string, scope?: string): void {\n        console.log(chalk.yellow('(WARN): ' + (scope ? scope + ' >> ' : '') + message));\n    }\n\n    info(message: string, scope?: string): void {\n        console.log(chalk.green('(INFO): ' + (scope ? scope + ' >> ' : '') + message));\n    }\n\n    debug(message: string): void {\n        console.log(chalk.blue('(DEBUG): ' + message));\n    }\n\n    status(message: string): void {\n        console.log(chalk.greenBright.bold.underline(message));\n    }\n\n    async notify(embed: APIEmbed | JSONEncodable<APIEmbed>) {\n        for (const devId of this.client.config.devs) {\n            try {\n                const dev = await this.client.users.fetch(devId);\n                await dev.send({ embeds: [embed] });\n            } catch (err) {\n                console.error(chalk.red('(ERROR): Error Warning Dev!'));\n                console.error(err);\n            }\n        }\n    }\n}\n"],"version":3}