{"debug_id":"0420516c-5f84-5fee-aa21-b4f995d8d2d0","file":"InteractionCreate.js","mappings":";AAAA,OAAO,EAAE,KAAK,EAAkC,MAAM,sBAAsB,CAAC;AAC7E,OAAO,EAAmB,MAAM,EAAE,MAAM,YAAY,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAEpD,MAAM,OAAO,iBAAkB,SAAQ,KAAK;IACxC,YAAY,MAAc,EAAE,SAAoB;QAC5C,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,WAA4B;QACtC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG;YAAE,OAAO;QAEtE,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ;YAAE,OAAO;QAEzC,MAAM,WAAW,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;QAE/D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC;YAAE,OAAO;QAE5D,IAAI;YACA,MAAM,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACtC;QAAC,OAAO,GAAG,EAAE;YACV,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,6BAA6B,EAAE,WAAW,CAAC,CAAC;YAC1F,WAAW,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;SAChF;IACL,CAAC;CACJ","names":[],"sourceRoot":"/","sources":["src/events/client/InteractionCreate.ts"],"sourcesContent":["import { Event, KATClient as Client, Commander } from '@structures/index.js';\nimport { BaseInteraction, Events } from 'discord.js';\nimport { ErrorEmbed } from '@utils/embeds/index.js';\n\nexport class InteractionCreate extends Event {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, Events.InteractionCreate);\n    }\n\n    async execute(interaction: BaseInteraction) {\n        if (!interaction.isChatInputCommand() || interaction.user.bot) return;\n\n        const command = this.commander.commands.get(interaction.commandName);\n        if (!command || command.disabled) return;\n\n        await interaction.deferReply({ ephemeral: command.ephemeral });\n\n        if (!this.commander.authorize(interaction, command)) return;\n\n        try {\n            await command.execute(interaction);\n        } catch (err) {\n            const eventId = this.client.logger.error(err, 'Error Running Slash Command', 'Commander');\n            interaction.editReply({ embeds: [new ErrorEmbed(eventId)] }).catch(() => {});\n        }\n    }\n}\n"],"version":3}