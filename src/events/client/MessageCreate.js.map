{"debug_id":"4e454bab-0a2f-5169-9164-baf154f1b056","file":"MessageCreate.js","mappings":";AAAA,OAAO,EAAE,KAAK,EAAkC,MAAM,sBAAsB,CAAC;AAC7E,OAAO,EAAE,MAAM,EAAW,MAAM,YAAY,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAEpD,MAAM,OAAO,aAAc,SAAQ,KAAK;IACpC,YAAY,MAAc,EAAE,SAAoB;QAC5C,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAgB;QAC1B,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG;YAAE,OAAO;QAE/B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC5F,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;YAAE,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC9H,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;YAAE,OAAO;QAEhD,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,WAAW,EAAY,CAAC;QACtG,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAE,CAAC,CAAC;QAClI,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,QAAQ;YAAE,OAAO;QAC5D,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YAAE,OAAO;QAEnD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC;YAAE,OAAO;QACvD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC;YAAE,OAAO;QAExD,IAAI;YACA,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAClC;QAAC,OAAO,GAAG,EAAE;YACV,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,4BAA4B,EAAE,WAAW,CAAC,CAAC;YACzF,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;SAC/E;IACL,CAAC;CACJ","names":[],"sourceRoot":"/","sources":["src/events/client/MessageCreate.ts"],"sourcesContent":["import { Event, KATClient as Client, Commander } from '@structures/index.js';\nimport { Events, Message } from 'discord.js';\nimport { ErrorEmbed } from '@utils/embeds/index.js';\n\nexport class MessageCreate extends Event {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, Events.MessageCreate);\n    }\n\n    async execute(message: Message) {\n        if (message.author.bot) return;\n\n        let prefix = this.client.isDev(message.author) ? this.client.devPrefix : this.client.prefix;\n        if (!this.client.isDev(message.author) && message.inGuild()) prefix = await this.client.cache.guilds.prefix(message.guild.id);\n        if (!message.content.startsWith(prefix)) return;\n\n        const commandName = message.content.slice(prefix.length).split(/ +/).shift()?.toLowerCase() as string;\n        const command = this.commander.commands.get(commandName) ?? this.commander.commands.get(this.commander.aliases.get(commandName)!);\n        if (!command || !command.legacy || command.disabled) return;\n        if (!command.allowDM && !message.inGuild()) return;\n\n        if (!this.commander.validate(message, command)) return;\n        if (!this.commander.authorize(message, command)) return;\n\n        try {\n            await command.execute(message);\n        } catch (err) {\n            const eventId = this.client.logger.error(err, 'Error Running Chat Command', 'Commander');\n            message.channel.send({ embeds: [new ErrorEmbed(eventId)] }).catch(() => {});\n        }\n    }\n}\n"],"version":3}