{"debug_id":"595d9476-96dc-5ea7-80bb-0f854f938956","file":"VoiceStateUpdate.js","mappings":";AAAA,OAAO,EAAE,KAAK,EAAkC,MAAM,sBAAsB,CAAC;AAC7E,OAAO,EAAE,MAAM,EAAc,MAAM,YAAY,CAAC;AAEhD,MAAM,OAAO,gBAAiB,SAAQ,KAAK;IACvC,YAAY,MAAc,EAAE,SAAoB;QAC5C,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAoB,EAAE,QAAoB;QACpD,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,IAAI,QAAQ,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;YAAE,WAAW,CAAC,OAAO,EAAE,CAAC;QACpF,IAAI,QAAQ,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,QAAQ,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE;YAC5E,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,SAAS,IAAI,WAAW,CAAC,YAAY,CAAC,EAAE,EAAE;gBACvE,WAAW,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC;gBAE5C,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;oBAClC,KAAK,EAAE;wBACH,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE;qBAChC;oBACD,MAAM,EAAE;wBACJ,OAAO,EAAE,WAAW,CAAC,YAAY,CAAC,EAAE;qBACvC;oBACD,MAAM,EAAE;wBACJ,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE;wBAC7B,OAAO,EAAE,WAAW,CAAC,YAAY,CAAC,EAAE;wBACpC,MAAM,EAAE,WAAW,CAAC,WAAW,EAAE,EAAE;wBACnC,MAAM,EAAE,IAAI;qBACf;iBACJ,CAAC,CAAC;gBAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,0CAA0C,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;aAChI;SACJ;IACL,CAAC;CACJ","names":[],"sourceRoot":"/","sources":["src/events/client/VoiceStateUpdate.ts"],"sourcesContent":["import { Event, KATClient as Client, Commander } from '@structures/index.js';\nimport { Events, VoiceState } from 'discord.js';\n\nexport class VoiceStateUpdate extends Event {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, Events.VoiceStateUpdate);\n    }\n\n    async execute(oldState: VoiceState, newState: VoiceState) {\n        const subcription = this.client.dispatcher.getSubscription(oldState.guild);\n        if (!subcription) return;\n\n        if (oldState.id == this.client.user?.id && !newState.channel) subcription.destroy();\n        if (oldState.id == this.client.user?.id && newState.id == this.client.user?.id) {\n            if (newState.channel && newState.channelId != subcription.voiceChannel.id) {\n                subcription.voiceChannel = newState.channel;\n\n                await this.client.prisma.queue.upsert({\n                    where: {\n                        guildId: subcription.guild.id,\n                    },\n                    update: {\n                        voiceId: subcription.voiceChannel.id,\n                    },\n                    create: {\n                        guildId: subcription.guild.id,\n                        voiceId: subcription.voiceChannel.id,\n                        textId: subcription.textChannel?.id,\n                        active: true,\n                    },\n                });\n\n                this.client.emit(Events.Debug, `DATABASE >> Updated Voice Channel For: ${subcription.guild.name} (${subcription.guild.id})`);\n            }\n        }\n    }\n}\n"],"version":3}