{"debug_id":"3024b586-87a0-5b42-9cb0-de6a3f3674af","file":"ClientReady.js","mappings":";AAAA,OAAO,EAAE,KAAK,EAAkC,MAAM,sBAAsB,CAAC;AAC7E,OAAO,EAAE,MAAM,EAAwC,MAAM,YAAY,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAC;AAE/D,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,OAAO,WAAY,SAAQ,KAAK;IAClC,YAAY,MAAc,EAAE,SAAoB;QAC5C,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,MAAqB;QAC/B,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QAEtC,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAErF,4CAA4C;QAC5C,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAEjF,IAAI,GAAG,CAAC,MAAM,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,MAAM,WAAW,EAAE,YAAY,CAAC,CAAC;YAExE,KAAK,MAAM,KAAK,IAAI,GAAG,EAAE;gBACrB,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM;oBAAE,SAAS;gBAE7C,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAgB,CAAC;gBACvE,IAAI,CAAC,OAAO;oBAAE,SAAS;gBAEvB,IAAI;oBACA,MAAM,OAAO,CAAC,IAAI,CAAC;wBACf,MAAM,EAAE,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;qBACpE,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;iBACzG;gBAAC,MAAM;oBACJ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;iBACnH;aACJ;YAED,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YAEhG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,YAAY,CAAC,CAAC;SACrE;QACD,+BAA+B;QAE/B,OAAO,CAAC,GAAG,CACP,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CACxB,kCAAkC,MAAM,CAAC,IAAI,EAAE,GAAG,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE,eAAe,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,cAAc,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAC3J,CACJ,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,2BAA2B,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC;IACjH,CAAC;CACJ","names":[],"sourceRoot":"/","sources":["src/events/client/ClientReady.ts"],"sourcesContent":["import { Event, KATClient as Client, Commander } from '@structures/index.js';\nimport { Events, Client as DiscordClient, TextChannel } from 'discord.js';\nimport { ActionEmbed } from '@utils/embeds/action.js';\nimport { MusicPrompts } from '@structures/interfaces/Enums.js';\n\nimport chalk from 'chalk';\n\nexport class ClientReady extends Event {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, Events.ClientReady);\n    }\n\n    async execute(client: DiscordClient) {\n        await this.client.server.initialize();\n\n        for (const module of this.commander.modules.values()) module.emit(this.name, client);\n\n        // Move to a method in the future (maybe :/)\n        const res = await this.client.prisma.queue.findMany({ where: { active: true } });\n\n        if (res.length) {\n            this.client.logger.info(`Warning ${res.length} Queue(s)`, 'Dispatcher');\n\n            for (const queue of res) {\n                if (!queue.active || !queue.textId) continue;\n\n                const channel = client.channels.cache.get(queue.textId) as TextChannel;\n                if (!channel) continue;\n\n                try {\n                    await channel.send({\n                        embeds: [new ActionEmbed('warn').setText(MusicPrompts.Restarted)],\n                    });\n                    this.client.logger.info(`Warning Sent To: ${channel.guild.name} (${channel.guild.id})`, 'Dispatcher');\n                } catch {\n                    this.client.logger.warn(`Failed To Send Warning To: ${channel.guild.name} (${channel.guild.id})`, 'Dispatcher');\n                }\n            }\n\n            await this.client.prisma.queue.updateMany({ where: { active: true }, data: { active: false } });\n\n            this.client.logger.info(`Queue(s) Set To Inactive`, 'Dispatcher');\n        }\n        // ----------------------------\n\n        console.log(\n            chalk.magenta.bold.underline(\n                `\\n---- >>> App Online, Client: ${client.user?.tag} (${client.user?.id}) [Version: ${this.client.config.version}] [Guilds: ${client.guilds.cache.size}]`\n            )\n        );\n        console.log(chalk.magenta.bold.underline(`---- >>> App Loaded In: ${Date.now() - this.client.startTime}ms`));\n    }\n}\n"],"version":3}