{"debug_id":"215203bd-dbbf-5baf-9cb3-91051847274d","file":"SubscriptionDestroy.js","mappings":";AAAA,OAAO,EAAE,KAAK,EAAkC,MAAM,EAAgB,MAAM,sBAAsB,CAAC;AACnG,OAAO,EAAE,MAAM,IAAI,aAAa,EAAE,MAAM,YAAY,CAAC;AAErD,MAAM,OAAO,mBAAoB,SAAQ,KAAK;IAC1C,YAAY,MAAc,EAAE,SAAoB;QAC5C,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,mBAAmB,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,YAA0B;QACpC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACnB,+BAA+B,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,CAAC,KAAK,CAAC,EAAE,YAAY,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,EACpH,YAAY,CACf,CAAC;QAEF,IAAI,YAAY,CAAC,OAAO,EAAE,SAAS;YAAE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;QAEnF,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE;gBACH,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;aACjC;YACD,MAAM,EAAE;gBACJ,MAAM,EAAE,KAAK;aAChB;YACD,MAAM,EAAE;gBACJ,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;gBAC9B,OAAO,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE;gBACrC,MAAM,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE;aACtC;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,sCAAsC,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;IACtI,CAAC;CACJ","names":[],"sourceRoot":"/","sources":["src/events/music/subscription/SubscriptionDestroy.ts"],"sourcesContent":["import { Event, KATClient as Client, Commander, Events, Subscription } from '@structures/index.js';\nimport { Events as DiscordEvents } from 'discord.js';\n\nexport class SubscriptionDestroy extends Event {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, Events.SubscriptionDestroy);\n    }\n\n    async execute(subscription: Subscription) {\n        this.client.logger.warn(\n            `Subscription Destroyed For: ${subscription.guild.name} (${subscription.guild.id}). Node: ${subscription.node.name}`,\n            'Dispatcher'\n        );\n\n        if (subscription.message?.deletable) subscription.message.delete().catch(() => {});\n\n        await this.client.prisma.queue.upsert({\n            where: {\n                guildId: subscription.guild.id,\n            },\n            update: {\n                active: false,\n            },\n            create: {\n                guildId: subscription.guild.id,\n                voiceId: subscription.voiceChannel.id,\n                textId: subscription.textChannel.id,\n            },\n        });\n\n        this.client.emit(DiscordEvents.Debug, `DATABASE >> Set Queue To Inactive: ${subscription.guild.name} (${subscription.guild.id})`);\n    }\n}\n"],"version":3}