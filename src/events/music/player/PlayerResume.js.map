{"debug_id":"9c6237f3-d60f-50b7-8d54-f1bc12aad3f1","file":"PlayerResume.js","mappings":";AAAA,OAAO,EAAE,KAAK,EAAkC,MAAM,EAAgB,MAAM,sBAAsB,CAAC;AACnG,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAEpD,MAAM,OAAO,YAAa,SAAQ,KAAK;IACnC,YAAY,MAAc,EAAE,SAAoB;QAC5C,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,YAA0B;QACpC,IAAI,YAAY,CAAC,OAAO,EAAE,QAAQ;YAC9B,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IAC9H,CAAC;CACJ","names":[],"sourceRoot":"/","sources":["src/events/music/player/PlayerResume.ts"],"sourcesContent":["import { Event, KATClient as Client, Commander, Events, Subscription } from '@structures/index.js';\nimport { MusicEmbed } from '@utils/embeds/index.js';\n\nexport class PlayerResume extends Event {\n    constructor(client: Client, commander: Commander) {\n        super(client, commander, Events.PlayerResume);\n    }\n\n    async execute(subscription: Subscription) {\n        if (subscription.message?.editable)\n            subscription.message.edit({ embeds: [new MusicEmbed(subscription).setPlaying(subscription.active)] }).catch(() => {});\n    }\n}\n"],"version":3}